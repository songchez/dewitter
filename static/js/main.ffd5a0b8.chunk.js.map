{"version":3,"sources":["m_base.js","routes/Auth.js","components/Deweet.js","components/HomeFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["f_app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storageSv","getStorage","db","getFirestore","auth","getAuth","Auth_signIn","data","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","then","result","catch","className","icon","faTwitter","color","size","style","marginBottom","type","placeholder","required","onClick","prev","faGithub","faGoogle","Deweet","deweetObj","isOwned","attachmentUrl","editing","setEditing","text","newDeweet","setNewDeweet","deleteDeweet","window","confirm","deleteDoc","doc","id","deleteObject","ref","toggleEdit","on_EditSubmit","updateDoc","autoFocus","src","alt","Date","createdAt","toString","class","faTrashAlt","faEdit","HomeFactory","user","refreshUser","deweet","setDeweet","attachment","setAttachment","fileInput","useRef","onClearAttachment","current","onSubmitDeweet","attachmentRef","uid","uuidV4","uploadString","response","getDownloadURL","deweets","now","createdId","addDoc","collection","e","signOut","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nDeweets","setDeweets","useEffect","q","query","orderBy","unsubscribe","onSnapshot","querySnapshot","newArray","docs","map","marginTop","Profile","displayName","newDisplayName","setDisplayName","photoURL","userPhoto","setUserPhoto","getMyDeweets","where","getDocs","forEach","changeProfile","userPhotoUrl","userPhotoRef","length","updateProfile","currentUser","alert","width","height","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouters","maxWidth","margin","exact","path","Auth","App","init","setInit","f_user","setF_user","onAuthStateChanged","args","u","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffd5a0b8.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n//import { getAnalytics } from \"firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGE_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst f_app = initializeApp(firebaseConfig);\r\n\r\nexport default f_app;\r\n\r\nexport const storageSv = getStorage(f_app);\r\nexport const db = getFirestore(f_app);\r\nexport const auth = getAuth(f_app);\r\n","import { useState } from \"react\";\r\nimport { auth } from \"m_base\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n} from \"firebase/auth\";\r\nimport {\r\n  faGoogle,\r\n  faGithub,\r\n  faTwitter,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction Auth_signIn() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  let data;\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        //create account\r\n        data = await createUserWithEmailAndPassword(auth, email, password);\r\n      } else {\r\n        //login\r\n        data = await signInWithEmailAndPassword(auth, email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new GoogleAuthProvider(auth);\r\n    } else if (name === \"github\") {\r\n      provider = new GithubAuthProvider(auth);\r\n    }\r\n    await signInWithPopup(auth, provider)\r\n      .then((result) => {\r\n        //setUserObject(result.user);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"E_mail\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          className=\"authInput\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"CreatAccount\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n          {newAccount ? \"Sign In\" : \"CreatAccount\"}\r\n        </span>\r\n        <div className=\"authBtns\">\r\n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n            Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n          </button>\r\n          <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n            Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n          </button>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth_signIn;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { deleteDoc, updateDoc, doc } from \"@firebase/firestore\";\r\nimport { ref, deleteObject } from \"@firebase/storage\";\r\nimport { db, storageSv } from \"m_base\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\nconst Deweet = ({ deweetObj, isOwned, attachmentUrl }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newDeweet, setNewDeweet] = useState(deweetObj.text);\r\n\r\n  const deleteDeweet = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete?\");\r\n    if (ok) {\r\n      //경/로를 지정\r\n      await deleteDoc(doc(db, `msg/${deweetObj.id}`));\r\n      await deleteObject(ref(storageSv, deweetObj.attachmentUrl));\r\n    }\r\n  };\r\n\r\n  //에딧버튼\r\n  const toggleEdit = () => setEditing((prev) => !prev);\r\n\r\n  const on_EditSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateDoc(doc(db, `msg/${deweetObj.id}`), {\r\n      text: newDeweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  //실시간 변경\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDeweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"deweet\">\r\n      {editing ? (\r\n        //에딧버튼눌렀을때\r\n        <>\r\n          <form onSubmit={on_EditSubmit} className=\"container deweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your deweet\"\r\n              value={newDeweet}\r\n              required\r\n              autoFocus\r\n              className=\"formInput\"\r\n              onChange={onChange}\r\n            />\r\n          </form>\r\n          <button onClick={on_EditSubmit}>Edit!</button>\r\n          <button onClick={toggleEdit} className=\"formBtn cancelBtn\">Cancel</button>\r\n        </>\r\n      ) : (\r\n        //안눌렀을때\r\n        <>\r\n        {attachmentUrl && <img src={attachmentUrl} alt=\"attach\"/>}\r\n          <h3>{deweetObj.text}</h3>\r\n          <p>{new Date(deweetObj.createdAt).toString()}</p>\r\n          {isOwned && (\r\n            <div class=\"deweet__actions\">\r\n              <span class=\"btn\" onClick={deleteDeweet}>\r\n                <FontAwesomeIcon icon={faTrashAlt} />\r\n              </span>\r\n              <span class=\"btn\" onClick={toggleEdit}>\r\n                <FontAwesomeIcon icon={faEdit} />\r\n              </span>\r\n              </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deweet;\r\n","import { signOut } from \"firebase/auth\";\r\nimport { auth, db, storageSv } from \"m_base\";\r\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\r\nimport { useRef, useState } from \"react\";\r\nimport { addDoc, collection } from \"firebase/firestore\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst HomeFactory = ({ user, refreshUser }) => {\r\n  const [deweet, setDeweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setDeweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      //image가져온거 넣기\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  //사진 지우기\r\n  const fileInput = useRef();\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n    fileInput.current.value = \"\";\r\n  };\r\n  //deweet서밋버튼\r\n  const onSubmitDeweet = async (event) => {\r\n    if (deweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    //파일업로드\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = ref(storageSv, `${user.uid}/${uuidV4()}`);\r\n      const response = await uploadString(\r\n        attachmentRef,\r\n        attachment,\r\n        \"data_url\"\r\n      );\r\n      attachmentUrl = await getDownloadURL(response.ref);\r\n    }\r\n    const deweets = {\r\n      text: deweet,\r\n      createdAt: Date.now(),\r\n      createdId: user.uid,\r\n      attachmentUrl,\r\n    };\r\n    await addDoc(collection(db, \"msg\"), deweets).catch((e) => {\r\n      console.error(e);\r\n    });\r\n    //창비우기\r\n    setDeweet(\"\");\r\n    onClearAttachment();\r\n  };\r\n  const Logout = () => {\r\n    //로그아웃\r\n    signOut(auth)\r\n      .then(() => {\r\n        console.log(\"로그아웃\");\r\n        refreshUser();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <button onClick={Logout}>로그아웃🎆</button>\r\n      <form onSubmit={onSubmitDeweet} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\"></div>\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={deweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind ?\"\r\n          maxLength={120}\r\n        ></input>\r\n        <input type=\"submit\" className=\"factoryInput__arrow\" />\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add photos</span>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n          id=\"attach-file\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFileChange}\r\n          ref={fileInput}\r\n          style={{\r\n            opacity: 0,\r\n          }}\r\n        />\r\n        <input type=\"submit\" value=\"Deweet\" onClick={onSubmitDeweet}  />\r\n        {attachment && (\r\n          <div className=\"factoryForm__attachment\">\r\n            <img\r\n              src={attachment}\r\n              style={{ backgroundImage: attachment }}\r\n              alt=\"yourDeweet\"\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n              <span>Remove</span>\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default HomeFactory;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  collection,\r\n  getFirestore,\r\n  onSnapshot,\r\n  query,\r\n  orderBy,\r\n} from \"firebase/firestore\";\r\nimport Deweet from \"components/Deweet\";\r\nimport HomeFactory from \"components/HomeFactory\";\r\n\r\nfunction Home({ user, refreshUser }) { //홈화면\r\n  const [nDeweets, setDeweets] = useState([]);\r\n  useEffect(() => {\r\n    // 실시간으로 데이터를 데이터베이스에서 가져오기\r\n    const q = query(collection(getFirestore(), \"msg\"), orderBy(\"createdAt\"));\r\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n      const newArray = querySnapshot.docs.map((doc) => {\r\n        return {\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        };\r\n      });\r\n      setDeweets(newArray);\r\n      //console.log(\"Current deweets in CA: \", newArray);\r\n    });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  //화면\r\n  return (\r\n    <div className=\"container\" >\r\n      <HomeFactory user={user} refreshUser={refreshUser} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nDeweets.map((deweets) => (\r\n          <Deweet\r\n            key={deweets.id}\r\n            deweetObj={deweets}\r\n            isOwned={deweets.createdId === user.uid}\r\n            attachmentUrl={deweets.attachmentUrl}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","import { updateProfile } from \"@firebase/auth\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  orderBy,\r\n  query,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\r\nimport { db, auth, storageSv } from \"m_base\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\n\r\nconst Profile = ({ refreshUser, user }) => {\r\n  const [newDisplayName, setDisplayName] = useState(user.displayName);\r\n  const [userPhoto, setUserPhoto] = useState(user.photoURL);\r\n  //console.log(user.photoURL); 현재상태확인\r\n  useEffect(() => {\r\n    //처음 실행\r\n    getMyDeweets();\r\n  });\r\n\r\n  const getMyDeweets = async () => {\r\n    //deweet받아오기\r\n    const deweets = query(\r\n      collection(db, \"msg\"),\r\n      where(\"createdId\", \"==\", user.uid),\r\n      orderBy(\"createdAt\") //where안에 orderby를 넣어야 작동함 (다수의 쿼리문을 받을수 없음)\r\n    );\r\n    const querySnapshot = await getDocs(deweets);\r\n    //console.log(\"스냅샷\", querySnapshot);\r\n    querySnapshot.forEach((doc) => {\r\n      //console.log(doc.id, \" => \", doc.data());\r\n    });\r\n  };\r\n\r\n  const changeProfile = async () => {\r\n    //프로파일 편집\r\n    const ok = window.confirm(\"Are you sure Edit Your Profile?\");\r\n    if (ok) {\r\n      let userPhotoUrl = \"\";\r\n      if (userPhoto === user.photoURL) {\r\n        console.log(\"이미지 안바뀜\");\r\n        userPhotoUrl = user.photoURL;\r\n      } else if (userPhoto !== \"\") {\r\n        const userPhotoRef = ref(storageSv, `${user.uid}/${uuidV4()}`);\r\n        const response = await uploadString(\r\n          userPhotoRef,\r\n          userPhoto,\r\n          \"data_url\"\r\n        );\r\n        userPhotoUrl = await getDownloadURL(response.ref);\r\n      }\r\n      if (newDisplayName.length > 3) {\r\n        await updateProfile(auth.currentUser, {\r\n          displayName: newDisplayName,\r\n          photoURL: userPhotoUrl,\r\n        })\r\n          .then(() => {\r\n            // Profile updated!\r\n            refreshUser();\r\n            alert(\"프로필이 변경되었습니다.\");\r\n            //window.location.replace(\"/profile\");\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        alert(\"글자수가 너무 적습니다!(4글자 이상)\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangeDisName = (event) => {\r\n    //디스플레이네임 바꾸기\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setDisplayName(value);\r\n  };\r\n\r\n  const fileInput = useRef();\r\n  const onClearAttachment = () => {\r\n    setUserPhoto(\"\");\r\n    fileInput.current.value = \"\";\r\n  };\r\n\r\n  const onChangeProFileImg = (event) => {\r\n    //프로필이미지바꾸기\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      //image가져온거 넣기\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setUserPhoto(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>{user.displayName}의 프로필</h3>\r\n      <h1>Edit your Profile</h1>\r\n      <form onSubmit={changeProfile} className=\"profileForm\">\r\n        <div>\r\n          {\" \"}\r\n          <input\r\n            onChange={onChangeDisName}\r\n            type=\"text\"\r\n            autoFocus\r\n            placeholder=\"Edit Your Name\"\r\n            value={newDisplayName}\r\n            className=\"formInput\"\r\n          ></input>\r\n        </div>\r\n        {userPhoto && (\r\n          <div>\r\n            <img\r\n              src={userPhoto}\r\n              width=\"100px\"\r\n              height=\"100px\"\r\n              alt={`${user.displayName} 의 프로필이미지`}\r\n            />\r\n            <button onClick={onClearAttachment}>Clear</button>\r\n          </div>\r\n        )}\r\n        <div>\r\n          {\" \"}\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={onChangeProFileImg}\r\n            ref={fileInput}\r\n          />\r\n        </div>\r\n\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ user }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {user.displayName ? `${user.displayName}의 Profile` : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nfunction AppRouters({ refreshUser, user }) {\r\n  return (\r\n    <Router>\r\n      {user && <Navigation user={user} />}\r\n      <Switch>\r\n        {user ? ( // User is signed In\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home refreshUser={refreshUser} user={user} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile refreshUser={refreshUser} user={user} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          // User is signed out\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppRouters;\r\n","import AppRouters from \"components/Router\";\nimport { onAuthStateChanged, updateProfile } from \"firebase/auth\";\nimport { auth } from \"m_base\";\nimport { useEffect, useState } from \"react\";\n\n//파이어베이스 초기화\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [f_user, setF_user] = useState(auth.currentUser);\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setF_user({\n          displayName: user.displayName,\n          photoURL: user.photoURL,\n          uid: user.uid,\n          updateProfile: (args) => updateProfile(auth, args),\n        });\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    if (auth.currentUser) {\n      const u = auth.currentUser;\n      setF_user({\n        displayName: u.displayName,\n        photoURL: u.photoURL,\n        uid: u.uid,\n        updateProfile: (args) => updateProfile(auth, args),\n      });\n    } else{\n      setF_user(null);\n    }\n  };\n\n  return (\n    <>\n      {init ? <AppRouters refreshUser={refreshUser} user={f_user} /> : \"로딩중\"}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}